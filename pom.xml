<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>DiscoDNC - The Disco Deterministic Network Calculator</name>
    <description>Deterministic Network Calculus (DNC) is a methodology for worst-case modeling and analysis of
        communication networks. It enables to derive deterministic bounds on a server’s backlog as well as a flow’s
        end-to-end delay. Given a directed graph of servers (server graph) and the flows crossing these servers, the
        Disco Deterministic Network Calculator (DiscoDNC) automates the derivation of bounds.
    </description>
    <url>discodnc.cs.uni-kl.de</url>

    <groupId>discodnc.cs.uni-kl.de</groupId>
    <artifactId>DiscoDNC</artifactId>
    <version>2.5.0-SNAPSHOT</version>

    <licenses>
        <license>
            <name>GNU General Lesser Public License (LGPL) version 2.1</name>
            <url>https://www.gnu.org/licenses/lgpl-2.1.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Steffen Bondorf</name>
            <email>bondorf@cs.uni-kl.de</email>
            <organization>Distributed Computer Systems (DISCO) Lab at TU Kaiserslautern</organization>
            <organizationUrl>https://disco.cs.uni-kl.de</organizationUrl>
        </developer>
        <developer>
            <name>Zoltan Matyas</name>
            <email>matyesz79@gmail.com</email>
            <organization></organization>
            <organizationUrl></organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/NetCal/DiscoDNC.git</connection>
        <developerConnection>scm:git:ssh://github.com/NetCal/DiscoDNC.git</developerConnection>
        <url>https://github.com/NetCal/DiscoDNC/tree/v2.5</url>
    </scm>

    <properties>
        <maven.compiler.source>10</maven.compiler.source>
        <maven.compiler.target>10</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <junit.platform.version>1.3.0-M1</junit.platform.version>
        <junit.jupiter.version>5.3.0-M1</junit.jupiter.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>[3.0,3.6.1]</version>
        </dependency>
        <dependency>
            <groupId>de.uni_kl.cs.discodnc</groupId>
            <artifactId>NumBackend</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/NumBackend-1.0.jar</systemPath>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- run the unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <dependencies>
                    <dependency>
                        <groupId>ch.ethz.rtc.kernel</groupId>
                        <artifactId>rtc</artifactId>
                        <scope>system</scope>
                        <systemPath>${project.basedir}/lib/rtc.jar</systemPath>
                        <version>1.2.beta.100</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-api</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-params</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- To build tests jar that includes all sources classes and sources 
                of the tests (no experiments) (we should decide whether to use the core and 
                extentsion as dep. from the maven repo or add it as classes to the jar) -->
            <id>tests</id>
            <build>
                <finalName>DiscoDNC_tests-${project.version}</finalName>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.9.1</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/functional_test/java</source>
                                        <source>src/mpa_ext/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/functional_test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ch.ethz.rtc.kernel</groupId>
                    <artifactId>rtc</artifactId>
                    <scope>system</scope>
                    <systemPath>${project.basedir}/lib/rtc.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-params</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- Classes and sources of the extension functionality (no tests, no 
                experiments) (we should decide whether to use the core as dep. from the maven 
                repo or add it as classes to the jar) -->
            <id>ext</id>
            <build>
                <finalName>DiscoDNC_ext-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/mpa_ext</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ch.ethz.rtc.kernel</groupId>
                    <artifactId>rtc</artifactId>
                    <scope>system</scope>
                    <systemPath>${project.basedir}/lib/rtc.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- classes and sources of the experiments functionality (no experiments) 
                (we should decide whether to use the core and extension as dep. from the 
                maven repo or add it as classes to the jar) -->
            <id>experiments</id>
            <build>
                <finalName>DiscoDNC_experiments-${project.version}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/experiments</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Eclipse users need to activate this profile manually. Go to your 
                project's properties, Maven and add eclipse (all lower case) to your Active 
                Maven Profiles. -->
            <id>eclipse</id>
            <!-- Source directories -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.9.1</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/experiments/java</source>
                                        <source>src/functional_test/java</source>
                                        <source>src/mpa_ext/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>ch.ethz.rtc.kernel</groupId>
                    <artifactId>rtc</artifactId>
                    <scope>system</scope>
                    <systemPath>${project.basedir}/lib/rtc.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-launcher</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-params</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <!-- Define common dependency versions in one place -->
    <dependencyManagement>
        <dependencies>
            <!-- External RTC -->
            <dependency>
                <groupId>ch.ethz.rtc.kernel</groupId>
                <artifactId>rtc</artifactId>
                <scope>system</scope>
                <systemPath>${project.basedir}/lib/rtc.jar</systemPath>
                <version>1.2.beta.100</version>
            </dependency>
            <!-- JUnit -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit.platform.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-surefire-provider</artifactId>
                <version>${junit.platform.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>